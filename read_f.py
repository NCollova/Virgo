import sys, os, mathimport numpy as np#from matplotlib import pyplot as pltimport pylab as pltfrom astropy.io import fitsnsa_agc_file='nsa_v0_1_2_with_AGC.Virgo.fits'nsa_agc=fits.getdata(nsa_agc_file)#hd_nsa_agc=fits.open(nsa_agc_file)#print hd_nsa_agc[1].columnsnsa_wise_file= 'nsa_v0_1_2_wise.Virgo.fits'nsa_wise=fits.getdata(nsa_wise_file)#hd_nsa_wise=fits.open(nsa_wise_file)#print hd_nsa_wise[1].columnsfull_file='nsa_v1_2_fsps_v2.4_miles_chab_charlot_sfhgrid01.Virgo.fits'full_data=fits.getdata(full_file)#hd_full_file=fits.open(full_file)#print hd_full_file[1].columns'''for key in range(len(full_data.RA)):    print nsa_agc.IAUNAME[key],  "%.4f" %full_data.RA[key], "%8.4f" %full_data.DEC[key],  "%8.4f" %full_data.MSTAR[key], "%8.4f" %full_data.MSTAR_AVG[key],  "%8.4f"%math.log10(full_data.TOTALMASS[key]), "%4d"%nsa_agc.IALFALFA[key], "%.2f" %nsa_wise.W4MPRO[key], "%5.2f" %nsa_wise.W4SNR[key], "%.2f" %(full_data.Z[key]*3.e5)sys.exit()for key in range(len(full_data.RA)):    print nsa_agc.IAUNAME[key], "%.4f" %full_data.RA[key], "%8.4f" %full_data.DEC[key],  "%8.4f" %full_data.MSTAR[key], "%4d"%nsa_agc.IALFALFA[key], "%.2f" %nsa_wise.W4MPRO[key], "%5.2f" %nsa_wise.W4SNR[key], "%.2f" %(full_data.Z[key]*3.e5)plt.figure()t=plt.hist(nsa_agc.ZDIST*3.e5)plt.show()'''target_30m =['J134845.16+414235.3', 'J134835.47+432428.8',            'J135209.79+431434.6', 'J135301.89+393450.8', 'J135224.87+393327.4',            'J135125.37+401247.7', 'J132021.28+412833.9', 'J135957.09+381203.3',            'J132256.47+281859.1', 'J131432.94+352305.3', 'J130547.56+274402.9',            'J124530.61+204857.4', 'J130834.27+210259.9', 'J131241.78+224947.2',            'J134031.19+425938.0', 'J134428.40+351131.9', 'J135359.49+394256.0',             'J125749.69+293917.0', 'J133825.19+330702.9']   target_30m =['J134845.16+414235.3','J134835.47+432428.8','J135209.79+431434.6',             'J135301.89+393450.8','J135224.87+393327.4','J135125.37+401247.7',             'J132849.76+461544.6','J132810.05+464019.7','J132833.65+462959.7',             'J132833.19+465537.8','J140124.02+364800.3','J135957.09+381203.3',             'J132256.47+281859.1','J130834.27+210259.9','J131241.78+224947.2',             'J134031.19+425938.0','J134428.40+351131.9',' J135359.49+394256.0',             'J133825.19+330702.9','J140025.00+383113.0']plt.figure(figsize=(6,6))plt.axis([150,220,-10,50])plt.gca().set_aspect('equal',adjustable='box') plt.gca().invert_xaxis()fig = plt.gcf()# global area of interestrect= plt.Rectangle((192,17), 20, 32,fill=False, color='k')fig.gca().add_artist(rect)# targetsfor key in target_30m:    vflag= np.where(nsa_agc.IAUNAME == key)    vflag = (full_data.MSTAR < 9. ) &  (full_data.Z*3.e5 >=  2000) &  (full_data.Z*3.e5 <= 3000)plt.plot(full_data.RA[vflag],full_data.DEC[vflag],'ok', alpha=0.2)vflag = (full_data.MSTAR < 9. ) &  (full_data.Z*3.e5 >=  2400) &  (full_data.Z*3.e5 <= 3000)plt.scatter(full_data.RA[vflag],full_data.DEC[vflag],c=full_data.Z[vflag]*3.e5,s=20,vmin=1000,vmax=3000)vflag = (full_data.MSTAR >= 9. ) &  (full_data.Z*3.e5 >=  2400) &  (full_data.Z*3.e5 <= 3000)plt.scatter(full_data.RA[vflag],full_data.DEC[vflag],c=full_data.Z[vflag]*3.e5,s=40,vmin=1000,vmax=3000)#plt.scatter(full_data.RA[vflag],full_data.DEC[vflag],c=full_data.Z[vflag]*3.e5,s=40,vmin=2400,vmax=3000)plt.colorbar(fraction=.08,label='Recession Velocity')plt.xlabel('RA (deg)')plt.ylabel('Dec (deg)')plt.title('region of interest')plt.savefig('selection_area.png')#plt.show()plt.figure(figsize=(6,6))plt.axis([192,212,17,49])plt.gca().set_aspect('equal',adjustable='box') plt.gca().invert_xaxis()fig = plt.gcf()for key in target_30m:        vflag= np.where(nsa_agc.IAUNAME == key)        plt.scatter(full_data.RA[vflag],full_data.DEC[vflag],s=80, facecolors='none', edgecolors='k')        #plt.scatter(full_data.RA[vflag],full_data.DEC[vflag],c=full_data.Z[vflag]*3.e5,s=40,vmin=1000,vmax=3000)    #plt.colorbar(fraction=.08,label='Recession Velocity')for key in target_30m:    vflag= np.where(nsa_agc.IAUNAME == key)    if full_data.MSTAR[vflag] > 0.:                plt.scatter(full_data.RA[vflag],full_data.DEC[vflag],c=full_data.MSTAR[vflag],s=40,vmin=6.,vmax=12.)plt.colorbar(fraction=.08,label='Log stellar mass')vflag = (full_data.MSTAR < 9. ) &  (full_data.Z*3.e5 >=  1000) &  (full_data.Z*3.e5 <= 3000) * (nsa_wise.W4MPRO > 0.) & (nsa_wise.W4SNR > 4.)plt.plot(full_data.RA[vflag],full_data.DEC[vflag], 'ok', alpha=0.3)rect= plt.Rectangle((207.8,39.5),1.,1., fill=False, color='k')fig.gca().add_artist(rect)#vflag = full_data.MSTAR >= 0.#plt.scatter(full_data.RA[vflag],full_data.DEC[vflag],c=full_data.MSTAR[vflag],s=40,vmin=6.,vmax=12.)#plt.colorbar(fraction=.08,label='Log stellar mass')#plt.colorbar(fraction=.08,label='Recession Velocity')plt.xlabel('RA (deg)')plt.ylabel('Dec (deg)')plt.title('IRAM 30m fields')#plt.savefig('targets.png')plt.show()#sys.exit()plt.figure(figsize=(6,6))plt.axis([192,212,17,49])plt.gca().set_aspect('equal',adjustable='box') plt.gca().invert_xaxis()fig = plt.gcf()#plt.figure()for key in target_30m:    vflag= np.where(nsa_agc.IAUNAME == key)        plt.scatter(full_data.RA[vflag],full_data.DEC[vflag],s=80, facecolors='none', edgecolors='k')           if full_data.DEC[vflag] > 38. and full_data.DEC[vflag] < 41.:       rect= plt.Rectangle((207.8,39.5),1.,1., fill=False, color='k')       fig.gca().add_artist(rect)    else:         rect= plt.Rectangle((nsa_agc.RA_1[vflag]-0.5,nsa_agc.DEC_1[vflag]-0.5),1.,1., fill=False, color='k')        fig.gca().add_artist(rect)    #circle=plt.Circle((nsa_agc.RA_1[vflag],nsa_agc.DEC_1[vflag]),0.5, fill=False, color='k')    #fig.gca().add_artist(circle)   #vflag = ( full_data.MSTAR <9. ) + ( (full_data.MSTAR >=9. ) &  (full_data.Z*3.e5 <  2400) &  (full_data.Z*3.e5 > 3000) )#plt.plot(full_data.RA[vflag],full_data.DEC[vflag],'ok', alpha=0.2)#vflag = (full_data.MSTAR >= 9. ) &  (full_data.Z*3.e5 >=  2400) &  (full_data.Z*3.e5 <= 3000)#plt.scatter(full_data.RA[vflag],full_data.DEC[vflag],c=full_data.Z[vflag]*3.e5,s=40,vmin=1000,vmax=3000)vflag = full_data.MSTAR >= 0.plt.scatter(full_data.RA[vflag],full_data.DEC[vflag],c=full_data.MSTAR[vflag],s=40,vmin=6.,vmax=12.)#plt.colorbar(fraction=.08,label='Log stellar mass')#plt.colorbar(fraction=.08,label='Recession Velocity')plt.xlabel('RA (deg)')plt.ylabel('Dec (deg)')plt.title('megacam fields')#plt.savefig('targets.png')#plt.show()print 'saved targets.png'sys.exit()plt.figure(figsize=(6,6))plt.scatter(full_data.RA,full_data.DEC,c=full_data.Z*3.e5,s=40,vmin=1000,vmax=3000)#plt.scatter(full_data.RA,full_data.DEC,c=full_data.MSTAR,s=40,vmin=6.,vmax=11.5)plt.axis([150,220,-10,50])plt.gca().invert_xaxis()plt.colorbar(fraction=.08,label='Recession Velocity')#plt.colorbar(fraction=.08,label='Log Stellar Mass')plt.xlabel('RA (deg)')plt.ylabel('Dec (deg)')plt.title('ALL Sources in the Vicinity of Virgo')plt.savefig('Virgo_ALL_sources_Vel.png')vflag = nsa_agc.IALFALFA > -1plt.figure(figsize=(6,6))plt.scatter(full_data.RA[vflag],full_data.DEC[vflag],c=full_data.Z[vflag]*3.e5,s=40,vmin=1000,vmax=3000)plt.axis([150,220,-10,50])plt.gca().invert_xaxis()plt.colorbar(fraction=.08,label='Recession Velocity')plt.xlabel('RA (deg)')plt.ylabel('Dec (deg)')plt.title('ALFALFA HI Sources in the Vicinity of Virgo')plt.savefig('Virgo_HI_sources.png')vflag = (nsa_wise.W4MPRO > 0.) & (nsa_wise.W4SNR > 2.)  #22microns#(nsa_wise.W3MPRO > 0.) & (nsa_wise.W3SNR > 2.)   # 12micronsplt.figure(figsize=(6,6))plt.scatter(full_data.RA[vflag],full_data.DEC[vflag],c=full_data.Z[vflag]*3.e5,s=40,vmin=1000,vmax=3000)plt.axis([150,220,-10,50])plt.gca().invert_xaxis()plt.colorbar(fraction=.08,label='Recession Velocity')plt.xlabel('RA (deg)')plt.ylabel('Dec (deg)')plt.title('WISE Sources in the Vicinity of Virgo')plt.savefig('Virgo_WISE_sources.png')